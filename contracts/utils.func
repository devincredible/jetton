slice address(int wc, int addr) inline_ref {

  ;; addr_std$10 anycast:(Maybe Anycast)
  ;; workchain_id:int8 address:bits256 = MsgAddressInt;

  return begin_cell()
    .store_uint(2, 2) ;; addr_std$10
    .store_uint(0, 1) ;; anycast nothing
    .store_int(wc, 8) ;; workchain_id:int8
    .store_uint(addr, 256) ;; address:bits256
    .end_cell()
    .begin_parse();
}

() send_message(slice to, int ton_amount, int op, int query_id, int mode) impure inline_ref {
  send_raw_message(
    begin_cell()
      .store_uint(0x18, 6)
      .store_slice(to)
      .store_grams(ton_amount)
      .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
      .store_uint(op, 32)
      .store_uint(query_id, 64)
    .end_cell()
  , mode);
}

() send_payload_message(slice to, int ton_amount, int token_amount, int op, int query_id, cell payload, int mode) impure inline_ref {
  send_raw_message(
    begin_cell()
      .store_uint(0x18, 6)
      .store_slice(to)
      .store_grams(ton_amount)
      .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
      .store_uint(op, 32)
      .store_uint(query_id, 64)
      .store_uint(token_amount, 256)
      .store_ref(payload)
    .end_cell()
  , mode);
}
